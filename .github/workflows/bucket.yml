name: Build and Deploy to S3

on:
  push:
    branches:
      - main  # Cambia a tu rama principal, si es diferente

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16  # O la versión que uses

      - name: Install Dependencies
        run: npm install

      - name: Build React App
        run: npm run build

      - name: Upload to S3
        run: |
          aws s3 sync ./dist/apps/catalog s3://pruebitaaverqonda
        env:
          AWS_S3_BUCKET: pruebitaaverqonda  
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}  # Clave de acceso
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # Clave secreta
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}  # Token de sesión temporal
          AWS_REGION: us-east-1
          SOURCE_DIR: dist  
          
  sonarcloud:
    name: SonarQube Cloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  
      - name: SonarQube Cloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  notificacion-lambda:
    name: Notify via Email
    runs-on: ubuntu-latest
    needs: build-and-deploy  # Este job depende de build-and-deploy
    steps:
      - name: Notify Success via AWS Lambda
        if: success()  # Se ejecuta si el build and deploy fue exitoso
        run: |
          aws lambda invoke \
            --function-name postman-test-notifier \
            --payload '{"status": "success", "details": "Build and deploy to S3 completed successfully"}' \
            response.json
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Notify Failure via AWS Lambda
        if: failure()  # Se ejecuta si el build and deploy falló
        run: |
          aws lambda invoke \
            --function-name postman-test-notifier \
            --payload '{"status": "failed", "details": "Build or deploy to S3 failed"}' \
            response.json
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
