name: Build and Deploy to S3

on:
  push:
    branches:
      - main  # Cambia a tu rama principal, si es diferente

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16  # O la versión que uses

      - name: Install Dependencies
        run: npm install

      - name: Build React App
        run: npm run build

      - name: Upload to S3
        run: |
          aws s3 sync ./dist/apps/catalog s3://pruebitaaverqonda
        env:
          AWS_S3_BUCKET: pruebitaaverqonda  # Nombre del bucket S3
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}  # Clave de acceso
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # Clave secreta
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}  # Token de sesión temporal
          AWS_REGION: us-east-1
          SOURCE_DIR: dist  # La carpeta dist contiene los archivos generados
          
  sonar-analysis:
    runs-on: ubuntu-latest
#    needs: build-and-deploy  # Esto asegura que el análisis se ejecute después del despliegue

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Java 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Install Dependencies
        run: npm install

      - name: Analyze with SonarQube
        uses: SonarSource/sonarqube-scan-action@7295e71c9583053f5bf40e9d4068a0c974603ec8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Token de SonarQube
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}   # URL de SonarQube
        with:
          args:
            -Dsonar.projectKey=carlosgilard_devops-react-frontend
